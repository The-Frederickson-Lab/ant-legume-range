if(is.null(EFN_synonyms_pow[[i]]$name) | is.na(EFN_synonyms_pow[[i]])) next
tmp <- as.data.frame(EFN_synonyms_pow[[i]]$name)
if(length(tmp) == 0) next
tmp$matched_name <- names(EFN_synonyms_pow)[i]
colnames(tmp) <- c("synonyms", "matched_name")
EFN_synonyms_pow_df <- rbind(EFN_synonyms_pow_df, tmp)
}
View(EFN_synonyms_pow_df)
View(domatia_synonyms_pow)
install.packages("taxize")
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(olsrr)
library(ape)
library(geiger)
library(nlme)
library(phytools)
library(caper)
library(tidyverse)
library(cowplot)
library(knitr)
library(taxize)
library(Taxonstand)
#library(taxizedb)
install.packages("Taxonstand")
library(Taxonstand)
#Legume range and nodulation data
range <- read.csv("legume_invasion_data_simonsenetal.csv") #Read in legume range data
names(range)[names(range) == "Species"] <- "Phy"
range$Phy <- as.character(gsub("_", " ", range$Phy))
#EFN data
EFN <- read.csv("EFNs_Weberatal_analysis_onlypresence.csv") #Read in EFN data
EFN$Phy <- as.character(gsub("_", " ", EFN$Phy))
#Domatia
domatia <- read.csv("domatia_chomickirenner_analysis_onlypresence.csv")  #Read in Domatia data
names(domatia)[names(domatia) == 'ï..Phy'] <- 'Phy'
domatia$Phy <- as.character(gsub("_", " ", domatia$Phy))
#Mycorrhizae
mycorrhizae <- read.csv("Maherali_simonsen_intersect.csv") #read in legume species in Maherali
mycorrhizae$Phy <- as.character(gsub("_", " ", mycorrhizae$Phy))
#Elaiosomes
elaiosomes <-
#Legume range and nodulation data
range <- read.csv("legume_invasion_data_simonsenetal.csv") #Read in legume range data
names(range)[names(range) == "Species"] <- "Phy"
range$Phy <- as.character(gsub("_", " ", range$Phy))
#EFN data
EFN <- read.csv("EFNs_Weberatal_analysis_onlypresence.csv") #Read in EFN data
EFN$Phy <- as.character(gsub("_", " ", EFN$Phy))
#Domatia
domatia <- read.csv("domatia_chomickirenner_analysis_onlypresence.csv")  #Read in Domatia data
names(domatia)[names(domatia) == 'ï..Phy'] <- 'Phy'
domatia$Phy <- as.character(gsub("_", " ", domatia$Phy))
#Mycorrhizae
mycorrhizae <- read.csv("Maherali_simonsen_intersect.csv") #read in legume species in Maherali
mycorrhizae$Phy <- as.character(gsub("_", " ", mycorrhizae$Phy))
#Resolve names
#domatia_resolve <- as.data.frame(gnr_resolve(domatia[, "Phy"], best_match_only=TRUE))
domatia <- merge(domatia, domatia_resolve, by.x = "Phy", by.y = "user_supplied_name", all.x=TRUE)
domatia$matched_name <- paste0(word(domatia$matched_name, 1, 1), " ", tolower(word(domatia$matched_name, 2, 2)))
#domatia_synonyms <- TPL(domatia$matched_name)
domatia <- cbind(domatia, domatia_synonyms)
domatia$Phy.domatia <- ifelse(!is.na(domatia$New.Genus) & !is.na(domatia$New.Species), paste0(domatia$New.Genus, " ", domatia$New.Species), NA)
domatia <- domatia[, c("Domatia", "Phy.domatia")]
domatia <- domatia[!duplicated(domatia),]
domatia <- domatia[complete.cases(domatia),]
#domatia_synonyms_pow <- synonyms(domatia$Phy.domatia, db="pow")
domatia_synonyms_pow_df <- data.frame(synonyms = character(), matched_name = character())
for(i in 1:length(domatia$Phy.domatia)){
id = domatia[i, "Phy.domatia"]
tmp <- as.data.frame(domatia_synonyms_pow[[id]]$name)
print(tmp)
if(length(tmp) == 0) next
tmp$matched_name <- id
colnames(tmp) <- c("synonyms", "matched_name")
print(tmp)
domatia_synonyms_pow_df <- rbind(domatia_synonyms_pow_df, tmp)
}
#Resolve names
#domatia_resolve <- as.data.frame(gnr_resolve(domatia[, "Phy"], best_match_only=TRUE))
domatia <- merge(domatia, domatia_resolve, by.x = "Phy", by.y = "user_supplied_name", all.x=TRUE)
domatia$matched_name <- paste0(word(domatia$matched_name, 1, 1), " ", tolower(word(domatia$matched_name, 2, 2)))
#domatia_synonyms <- TPL(domatia$matched_name)
domatia <- cbind(domatia, domatia_synonyms)
domatia$Phy.domatia <- ifelse(!is.na(domatia$New.Genus) & !is.na(domatia$New.Species), paste0(domatia$New.Genus, " ", domatia$New.Species), NA)
domatia <- domatia[, c("Domatia", "Phy.domatia")]
domatia <- domatia[!duplicated(domatia),]
domatia <- domatia[complete.cases(domatia),]
#domatia_synonyms_pow <- synonyms(domatia$Phy.domatia, db="pow")
domatia_synonyms_pow_df <- data.frame(synonyms = character(), matched_name = character())
for(i in 1:length(domatia$Phy.domatia)){
id = domatia[i, "Phy.domatia"]
tmp <- as.data.frame(domatia_synonyms_pow[[id]]$name)
print(tmp)
if(length(tmp) == 0) next
tmp$matched_name <- id
colnames(tmp) <- c("synonyms", "matched_name")
print(tmp)
domatia_synonyms_pow_df <- rbind(domatia_synonyms_pow_df, tmp)
}
domatia <- merge(domatia, domatia_resolve, by.x = "Phy", by.y = "user_supplied_name", all.x=TRUE)
domatia$matched_name <- paste0(word(domatia$matched_name, 1, 1), " ", tolower(word(domatia$matched_name, 2, 2)))
#domatia_synonyms <- TPL(domatia$matched_name)
domatia <- cbind(domatia, domatia_synonyms)
domatia$Phy.domatia <- ifelse(!is.na(domatia$New.Genus) & !is.na(domatia$New.Species), paste0(domatia$New.Genus, " ", domatia$New.Species), NA)
domatia <- domatia[, c("Domatia", "Phy.domatia")]
domatia <- domatia[!duplicated(domatia),]
domatia <- domatia[complete.cases(domatia),]
#domatia_synonyms_pow <- synonyms(domatia$Phy.domatia, db="pow")
domatia_synonyms_pow_df <- data.frame(synonyms = character(), matched_name = character())
#Legume range and nodulation data
range <- read.csv("legume_invasion_data_simonsenetal.csv") #Read in legume range data
names(range)[names(range) == "Species"] <- "Phy"
range$Phy <- as.character(gsub("_", " ", range$Phy))
#EFN data
EFN <- read.csv("EFNs_Weberatal_analysis_onlypresence.csv") #Read in EFN data
EFN$Phy <- as.character(gsub("_", " ", EFN$Phy))
#Domatia
domatia <- read.csv("domatia_chomickirenner_analysis_onlypresence.csv")  #Read in Domatia data
names(domatia)[names(domatia) == 'ï..Phy'] <- 'Phy'
domatia$Phy <- as.character(gsub("_", " ", domatia$Phy))
#Mycorrhizae
mycorrhizae <- read.csv("Maherali_simonsen_intersect.csv") #read in legume species in Maherali
mycorrhizae$Phy <- as.character(gsub("_", " ", mycorrhizae$Phy))
#domatia_resolve <- as.data.frame(gnr_resolve(domatia[, "Phy"], best_match_only=TRUE))
domatia <- merge(domatia, domatia_resolve, by.x = "Phy", by.y = "user_supplied_name", all.x=TRUE)
domatia$matched_name <- paste0(word(domatia$matched_name, 1, 1), " ", tolower(word(domatia$matched_name, 2, 2)))
#domatia_synonyms <- TPL(domatia$matched_name)
domatia <- cbind(domatia, domatia_synonyms)
domatia$Phy.domatia <- ifelse(!is.na(domatia$New.Genus) & !is.na(domatia$New.Species), paste0(domatia$New.Genus, " ", domatia$New.Species), NA)
domatia <- domatia[, c("Domatia", "Phy.domatia")]
domatia <- domatia[!duplicated(domatia),]
domatia <- domatia[complete.cases(domatia),]
#domatia_synonyms_pow <- synonyms(domatia$Phy.domatia, db="pow")
domatia_synonyms_pow_df <- data.frame(synonyms = character(), matched_name = character())
EFN_resolve$num_words <- str_count(EFN_resolve$matched_name, " ")+1
EFN <- merge(EFN, EFN_resolve, by.y = "user_supplied_name", by.x = "Phy", all.x=TRUE)
EFN$matched_name <- ifelse(EFN$num_words == 1, NA, EFN$matched_name)
EFN$matched_name <- ifelse(!is.na(EFN$matched_name), paste0(word(EFN$matched_name, 1, 1), " ", tolower(word(EFN$matched_name, 2, 2))), EFN$matched_name)
#EFN_synonyms <- TPL(EFN$matched_name)
EFN <- cbind(EFN, EFN_synonyms)
EFN$check <- ifelse(EFN$matched_name == EFN$Taxon, TRUE, FALSE)
EFN$Phy.EFN <- ifelse(!is.na(EFN$New.Genus) & !is.na(EFN$New.Species), paste0(EFN$New.Genus, " ", EFN$New.Species), NA)
EFN <- EFN[, c("EFN", "Phy.EFN")]
EFN <- EFN[!duplicated(EFN),]
EFN <- EFN[complete.cases(EFN),]
#EFN_synonyms_pow <- synonyms(EFN$Phy.EFN, db="pow")
EFN_synonyms_pow_df <- data.frame(synonyms = character(), matched_name = character())
#range_resolve <- as.data.frame(gnr_resolve(range[, "Phy"], best_match_only=TRUE))
range_resolve$num_words <- str_count(range_resolve$matched_name, " ")+1
range <- merge(range, range_resolve, by.x="Phy", by.y = "user_supplied_name", all.x=TRUE)
range$matched_name <- ifelse(range$num_words == 1, NA, range$matched_name)
range$matched_name <- ifelse(!is.na(range$matched_name), paste0(word(range$matched_name, 1, 1), " ", tolower(word(range$matched_name, 2, 2))), range$matched_name)
#range_synonyms <- TPL(range$matched_name)
range <- cbind(range, range_synonyms)
range$Phy.range <- paste0(range$New.Genus, " ", range$New.Species)
range <- range[!duplicated(range),]
mycorrhizae_resolve <- as.data.frame(gnr_resolve(mycorrhizae[, "Phy"], best_match_only=TRUE))
mycorrhizae <- merge(mycorrhizae, mycorrhizae_resolve, by.x = "Phy", by.y = "user_supplied_name", all.x=TRUE)
mycorrhizae_synonyms <- TPL(mycorrhizae$matched_name)
mycorrhizae <- cbind(mycorrhizae, mycorrhizae_synonyms)
mycorrhizae$Phy.myco <- paste0(mycorrhizae$New.Genus, " ", mycorrhizae$New.Species)
mycorrhizae <- mycorrhizae[, c("Consensus.mycorrhizal.state", "Phy.myco")]
mycorrhizae <- mycorrhizae[!duplicated(mycorrhizae),]
View(EFN)
"Acacia" %in% EFN$Phy.EFN
"Vachellia drepanalobium" %in% EFN$Phy.EFN
EFN$Phy.EFN2 <- startsWith(EFN$Phy.EFN, "Acacia")
EFN$Phy.EFN2 <- startsWith(EFN$Phy.EFN, c("Acacia", "Vachellia", "Senegalia")
EFN$Phy.EFN2 <- startsWith(EFN$Phy.EFN, c("Acacia", "Vachellia", "Senegalia"))
mycorrhizae$Phy.myco <- trimws(mycorrhizae$Phy.myco)
#mycorrhizae_resolve <- as.data.frame(gnr_resolve(mycorrhizae[, "Phy"], best_match_only=TRUE))
mycorrhizae <- merge(mycorrhizae, mycorrhizae_resolve, by.x = "Phy", by.y = "user_supplied_name", all.x=TRUE)
#mycorrhizae_synonyms <- TPL(mycorrhizae$matched_name)
mycorrhizae <- cbind(mycorrhizae, mycorrhizae_synonyms)
mycorrhizae$Phy.myco <- paste0(mycorrhizae$New.Genus, " ", mycorrhizae$New.Species)
mycorrhizae <- mycorrhizae[, c("Consensus.mycorrhizal.state", "Phy.myco")]
mycorrhizae <- mycorrhizae[!duplicated(mycorrhizae),]
mycorrhizae$Phy.myco <- trimws(mycorrhizae$Phy.myco)
mycorrhizae <- read.csv("Maherali_simonsen_intersect.csv") #read in legume species in Maherali
mycorrhizae$Phy <- as.character(gsub("_", " ", mycorrhizae$Phy))
#mycorrhizae_resolve <- as.data.frame(gnr_resolve(mycorrhizae[, "Phy"], best_match_only=TRUE))
mycorrhizae <- merge(mycorrhizae, mycorrhizae_resolve, by.x = "Phy", by.y = "user_supplied_name", all.x=TRUE)
#mycorrhizae_synonyms <- TPL(mycorrhizae$matched_name)
mycorrhizae <- cbind(mycorrhizae, mycorrhizae_synonyms)
mycorrhizae$Phy.myco <- paste0(mycorrhizae$New.Genus, " ", mycorrhizae$New.Species)
mycorrhizae <- mycorrhizae[, c("Consensus.mycorrhizal.state", "Phy.myco")]
mycorrhizae <- mycorrhizae[!duplicated(mycorrhizae),]
mycorrhizae$Phy.myco <- trimws(mycorrhizae$Phy.myco)
range$Phy.range <- trimws(range$Phy.range)
EFN$Phy.EFN <- trimws(EFN$Phy.EFN)
domatia$Phy.domatia <- trimws(domatia$Phy.domatia)
EFN$Phy.EFN2 <- startsWith(EFN$Phy.EFN, c("Acacia", "Vachellia", "Senegalia"))
EFN$Phy.EFN2 <- startsWith(EFN$Phy.EFN, "Vachellia")
EFN$Phy.isSenegalia <- startsWith(EFN$Phy.EFN, "Senegalia")
EFN$Phy.EFN2 <- ifelse(EFN$Phy.isSenegalia, paste0("Acacia", " ", word(EFN$Phy.EFN, 2, 2)))
EFN$Phy.EFN2 <- ifelse(EFN$Phy.isSenegalia, paste0("Acacia", " ", word(EFN$Phy.EFN, 2, 2)), EFN$Phy.EFN)
EFN$Phy.EFN2 <- ifelse(EFN$Phy.isVachellia, paste0("Acacia", " ", word(EFN$Phy.EFN, 2, 2)), EFN$Phy.EFN2)
EFN$Phy.EFN2 <- ifelse(EFN$Phy.isVachellia, paste0("Acacia", " ", word(EFN$Phy.EFN, 2, 2)), EFN$Phy.EFN2)
EFN$Phy.isVachellia <- startsWith(EFN$Phy.EFN, "Vachellia")
EFN$Phy.isSenegalia <- startsWith(EFN$Phy.EFN, "Senegalia")
EFN$Phy.EFN2 <- ifelse(EFN$Phy.isSenegalia, paste0("Acacia", " ", word(EFN$Phy.EFN, 2, 2)), EFN$Phy.EFN)
EFN$Phy.EFN3 <- ifelse(EFN$Phy.isVachellia, paste0("Acacia", " ", word(EFN$Phy.EFN, 2, 2)), EFN$Phy.EFN2)
EFN_domatia <- merge(EFN, domatia, by.x='Phy.EFN3', by.y = "Phy.domatia", all.x=TRUE, all.y=TRUE)
View(EFN_domatia)
range_EFN_domatia <- merge(range, EFN_domatia, by.x = "matched_name", by.y = 'Phy.EFN3', all.x=TRUE, all.y=FALSE, incomparables = NA)
range_EFN_domatia$EFN <- ifelse(is.na(range_EFN_domatia$EFN), 0, range_EFN_domatia$EFN) #Make NAs zeros for EFNs
range_EFN_domatia$Domatia <- ifelse(is.na(range_EFN_domatia$Domatia), 0, range_EFN_domatia$Domatia) #Make NAs zeros for domatia
legume_range_df <- merge(range_EFN_domatia, mycorrhizae, all.x="TRUE", all.y="FALSE", by = "matched_name") #Put all the data in one dataframe
View(range_EFN_domatia)
View(mycorrhizae)
legume_range_df <- merge(range_EFN_domatia, mycorrhizae, all.x="TRUE", all.y="FALSE", by.x = "matched_name", by.y = "Phy.myco")
legume_range_df$EFN <- as.factor(legume_range_df$EFN)
legume_range_df$Domatia <- as.factor(legume_range_df$Domatia)
legume_range_df$fixer <- as.factor(legume_range_df$fixer)
legume_range_df$Consensus.mycorrhizal.state <- as.factor(legume_range_df$Consensus.mycorrhizal.state)
legume_range_df$annual <- as.numeric(legume_range_df$annual)
summary.all <- ungroup(subset(legume_range_df, !is.na(num_introduced)) %>% group_by(Domatia, EFN, fixer, Consensus.mycorrhizal.state) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.all)
summary.efn <- ungroup(subset(legume_range_df, !is.na(num_introduced)) %>% group_by(EFN) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.efn)
summary.dom <- ungroup(subset(legume_range_df, !is.na(num_introduced)) %>% group_by(Domatia) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.dom)
summary.fix <- ungroup(subset(legume_range_df, !is.na(num_introduced)) %>% group_by(fixer) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.fix)
summary.myco <- ungroup(subset(legume_range_df, !is.na(num_introduced)) %>% group_by(Consensus.mycorrhizal.state) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.myco)
legume_range_df$myco <- ifelse(legume_range_df$Consensus.mycorrhizal.state == "AM" | legume_range_df$Consensus.mycorrhizal.state == "AMNM" | legume_range_df$Consensus.mycorrhizal.state == "EM", 1, ifelse(legume_range_df$Consensus.mycorrhizal.state == "NM", 0, NA))
legume_range_df$myco <- as.factor(legume_range_df$myco)
summary.myco2 <- ungroup(subset(legume_range_df, !is.na(num_introduced)) %>% group_by(myco) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.myco2)
pt_size <- 3
y_limits <- c(-1, 10.5)
er_width <- 0.1
y_text <- -0.5
p_EFN <- ggplot(data=summary.efn, aes(x=EFN, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced ranges (no.)")+xlab("EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_EFN
p_dom <- ggplot(data=summary.dom, aes(x=Domatia, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+geom_line(aes(group=1), linetype="dashed")+theme_cowplot()+ylab("Introduced ranges (no.)")+xlab("Domatia")+geom_text(aes(x=Domatia, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_dom
p_fix <- ggplot(data=summary.fix, aes(x=fixer, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=fixer, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+geom_line(aes(group=1), linetype="dashed")+theme_cowplot()+ylab("Introduced ranges (no.)")+xlab("Nodules")+geom_text(aes(x=fixer, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_fix
p_myco_sup <- ggplot(data=subset(summary.myco, !is.na(Consensus.mycorrhizal.state)), aes(x=Consensus.mycorrhizal.state, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Consensus.mycorrhizal.state, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+theme_cowplot()+ylab("Introduced ranges (no.)")+xlab("Mycorrhizal state")+geom_text(aes(x=Consensus.mycorrhizal.state, y= 0.1, label=n))+scale_y_continuous(limits=c(0, 12.5))
p_myco_sup
p_myco <- ggplot(data=subset(summary.myco2, !is.na(myco)), aes(x=myco, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=myco, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+geom_line(aes(group=1), linetype="dashed")+theme_cowplot()+ylab("Introduced ranges (no.)")+xlab("Mycorrhizae")+geom_text(aes(x=myco, y= y_text, label=n))+scale_y_continuous(limits=y_limits)+scale_x_discrete(labels=c("No", "Yes"))
p_myco
fig1 <- plot_grid(p_EFN, p_dom, p_myco, p_fix,labels="AUTO")
fig1
save_plot("MEF_figure1.pdf", fig1, base_height=6)
y_limits <- c(-1, 18.5)
hues <- c("#af8dc3", "#7fbf7b")
summary.efnfix <- ungroup(subset(legume_range_df, !is.na(num_introduced)) %>% group_by(EFN, fixer) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.efnfix)
p_efnfix <- ggplot(data=summary.efnfix, aes(x=fixer, y=mean_num_introduced, color=EFN))+geom_point(size=pt_size)+geom_errorbar(aes(x=fixer, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced, color=EFN), width=er_width)+theme_cowplot()+ylab("Introduced ranges (no.)")+geom_line(aes(group=EFN),linetype="dashed")+xlab("Nodules")+scale_x_discrete(labels=c("No", "Yes"))+ scale_color_manual(values=hues, labels = c("No", "Yes"))+scale_y_continuous(limits=y_limits)
summary.efndom <- ungroup(subset(legume_range_df, !is.na(num_introduced)) %>% group_by(EFN, Domatia) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.efndom)
p_efndom <- ggplot(data=summary.efndom, aes(x=Domatia, y=mean_num_introduced, color=EFN))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced, color=EFN), width=er_width)+theme_cowplot()+ylab("Introduced ranges (no.)")+geom_line(aes(group=EFN),linetype="dashed")+xlab("Domatia")+scale_x_discrete(labels=c("No", "Yes"))+ scale_color_manual(values=hues, labels = c("No", "Yes"))+scale_y_continuous(limits=y_limits)
summary.efnmyco <- ungroup(subset(legume_range_df, !is.na(num_introduced)) %>% group_by(EFN, myco) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.efnmyco)
summary.efnmyco$trait <- paste0(summary.efnmyco$EFN, summary.efnmyco$myco)
p_efnmyco <- ggplot(data=subset(summary.efnmyco, !is.na(myco)), aes(x=trait, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=trait, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+theme_cowplot()+ylab("Introduced ranges (no.)")+geom_line(aes(group=1),linetype="dashed")+xlab("Mutualistic traits")+scale_x_discrete(labels=c("Neither EFNs\nnor mycorrhizae", "Mycorrhizae only\n (no EFNs)", "Both EFNs\n and mycorrhizae"))+scale_y_continuous(limits=y_limits)
p_efnmyco
summary.mycofix <- ungroup(subset(legume_range_df, !is.na(num_introduced)) %>% group_by(myco, fixer) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.mycofix)
summary.mycofix$trait <- paste0(summary.mycofix$fixer, summary.mycofix$myco)
p_mycofix <- ggplot(data=subset(summary.mycofix, !is.na(myco)), aes(x=trait, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=trait, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+theme_cowplot()+ylab("Introduced ranges (no.)")+geom_line(aes(group=1),linetype="dashed")+xlab("Mutualistic traits")+scale_x_discrete(labels=c("Mycorrhizae only", "Nodules only", "Both nodules\n and mycorrhizae"))+scale_y_continuous(limits=y_limits)
p_mycofix
fig2 <- plot_grid(p_efndom, p_efnfix, p_efnmyco, p_mycofix, labels="AUTO")
fig2
save_plot("MEF_figure2.pdf", fig2, base_height=6)
summary.all2 <- ungroup(subset(legume_range_df, !is.na(myco)) %>% group_by(myco, fixer, EFN) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.all2)
legume_range_df$Phy <- paste0(as.character(word(legume_range_df$matched_name, 1, 1)), "_", as.character(word(legume_range_df$matched_name, 2, 2)))
zanne <- read.tree("Vascular_Plants_rooted.dated.tre") #reading in Zanne et al. 2014 plant phylogeny
phyint <- intersect(zanne$tip.label, legume_range_df$Phy)
phydiff <- setdiff(zanne$tip.label, legume_range_df$Phy)
pruned.tree.pgls <- drop.tip(zanne, phydiff) #dropping tips not in the dataset
range_pgls <- legume_range_df[legume_range_df$Phy %in% phyint, ]
colnames(range_pgls)
range_pgls <-range_pgls[,c(25, 1, 3, 4, 5, 6, 7, 8, 9, 10, 15, 17, 20, 24, 2, 11:14, 16, 18:19, 21:23)]
range_pgls <- range_pgls[complete.cases(range_pgls[, 1:12]), 1:12] #removing NA elements
summary.all <- ungroup(range_pgls %>% group_by(Domatia, EFN, fixer) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.all)
range_pgls <-range_pgls[,c(1:10, 42, 46:48, 11:41, 43:45)]
View(range_pgls)
range_pgls <- legume_range_df[legume_range_df$Phy %in% phyint, ]
colnames(range_pgls)
range_pgls <-range_pgls[,c(1:10, 42, 46:48, 11:41, 43:45)]
range_pgls <- legume_range_df[legume_range_df$Phy %in% phyint, ]
colnames(range_pgls)
range_pgls <-range_pgls[,c(1:10, 41, 46:48, 11:40, 42:45)]
range_pgls <- range_pgls[complete.cases(range_pgls[, 1:12]), 1:12] #removing NA elements
summary.all <- ungroup(range_pgls %>% group_by(Domatia, EFN, fixer) %>% summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.all)
p2 <- gls(log(num_introduced + 1) ~  EFN+fixer +
total_area_native + abs_lat_native + uses_num_uses,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy),
method = "ML", data = range_pgls)
summary(p2)
p3 <- glm(num_introduced ~ Domatia + EFN + fixer + total_area_native + abs_lat_native + annual + uses_num_uses, family="quasipoisson", data=legume_range_df)
summary(p3)
plot(p3)
p3 <- glm.nb(num_introduced ~ Domatia + EFN + fixer + total_area_native + abs_lat_native + annual + uses_num_uses, data=legume_range_df)
summary(p3)
plot(p3)
antarea <- read.csv("Ant_species_native range.csv") #native area for ants
invarea <- read.csv("invaded_area_ant_species.csv") #invaded area for ants - all types of introduction and all available data
abslat <- read.csv("absolute_native_lat_ants7Feb.csv")
nat_inv_area <- merge(invarea, antarea, by='Phy', all.y=TRUE)
#nat_inv_area <- subset(nat_inv_area, select = -c(X,LogArea.introduced, LogArea.native))
nat_inv_area$total.area.introduced <- ifelse(is.na(nat_inv_area$total.area.introduced), 0, nat_inv_area$total.area.introduced) #Make NAs zeros
nat_inv_area_lat <- merge(abslat, nat_inv_area, by = 'Phy')
nat_inv_area_lat <- data.frame(nat_inv_area_lat)[, -c(2, 4, 5, 6, 10, 11)] #removing unnecessary columns
antefn <- read.csv("Species_EFN_Data.csv")
antdom <- read.csv("Species_Domatia_Data.csv")
antseed <- read.csv("Species_Seed_Dispersal_Data.csv")
#Creating merged datasets for area
efn_area <- merge(nat_inv_area_lat, antefn, by.y = "Phy", all = FALSE)
efn_dom_area <- merge(efn_area, antdom, by.y = "Phy", all = FALSE)
efn_dom_seed_area <- merge(efn_dom_area, antseed, by.y = "Phy", all = FALSE)
area <- efn_dom_seed_area
#write.csv(area, "ants_nat_alien_mutualismcombined.csv")
View(area)
pt_size <- 3
y_limits <- c(-1, 10.5)
er_width <- 0.1
y_text <- -0.5
summary.ant.efn <- area %>% group_by(EFN) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antEFN
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antEFN
View(summary.ant.efn)
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))
#+scale_y_continuous(limits=y_limits)
p_antEFN
View(invarea)
View(antefn)
View(efn_area)
View(efn_dom_area)
summary.ant.dom <- area %>% group_by(Domatia) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
View(summary.ant.dom)
summary.ant.dom <- area %>% group_by(Domatia) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antdom <- ggplot(data=summary.ant.dom, aes(x=Domatia, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Nests in domatia")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes")) #+scale_y_continuous(limits=y_limits)
p_antdom
p_antdom <- ggplot(data=summary.ant.dom, aes(x=Domatia, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Nests in domatia")+geom_text(aes(x=Domatia, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes")) #+scale_y_continuous(limits=y_limits)
p_antdom
summary.ant.elaiosome <- area %>% group_by(Seed_Dispersal) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
View(summary.ant.elaiosome)
summary.ant.elaiosome <- area %>% group_by(Seed_Dispersal) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_elaiosome <- ggplot(data=summary.ant.elaiosome, aes(x=Seed_Dispersal, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Seed_Dispersal, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Disperses seeds")+geom_text(aes(x=Seed_Dispersal, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes")) #+scale_y_continuous(limits=y_limits)
p_elaiosome
fig3 <- plot_grid(p_antefn, p_antdom, p_elaiosome, labels="AUTO", ncol = 2, nrow = 2)
fig3
fig3 <- plot_grid(p_antEFN, p_antdom, p_elaiosome, labels="AUTO", ncol = 2, nrow = 2)
fig3
4e+06
4000000
y_limits <- c(0, 4.5e+6)
summary.ant.efn <- area %>% group_by(EFN) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))
+scale_y_continuous(limits=y_limits)
p_antEFN
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antEFN
y_limits <- c(-10, 4.5e+6)
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antEFN
summary.ant.dom <- area %>% group_by(Domatia) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antdom <- ggplot(data=summary.ant.dom, aes(x=Domatia, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Nests in domatia")+geom_text(aes(x=Domatia, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antdom
p_elaiosome <- ggplot(data=summary.ant.elaiosome, aes(x=Seed_Dispersal, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Seed_Dispersal, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Disperses seeds")+geom_text(aes(x=Seed_Dispersal, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_elaiosome
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Visit EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_y_continuous(limits=y_limits)
p_antEFN
area$EFN <- as.factor(area$EFN)
area$Seed_Dispersal <- as.factor(area$Seed_Dispersal)
area$Domatia <- as.factor(area$Domatia)
pt_size <- 3
y_limits <- c(-10, 4.5e+6)
er_width <- 0.1
y_text <- -0.5
summary.ant.efn <- area %>% group_by(EFN) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Visit EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antEFN
summary.ant.dom <- area %>% group_by(Domatia) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antdom <- ggplot(data=summary.ant.dom, aes(x=Domatia, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Nests in domatia")+geom_text(aes(x=Domatia, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antdom
summary.ant.elaiosome <- area %>% group_by(Seed_Dispersal) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_elaiosome <- ggplot(data=summary.ant.elaiosome, aes(x=Seed_Dispersal, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Seed_Dispersal, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Disperses seeds")+geom_text(aes(x=Seed_Dispersal, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_elaiosome
fig3 <- plot_grid(p_antEFN, p_antdom, p_elaiosome, labels="AUTO", ncol = 2, nrow = 2)
fig3
View(antdom)
View(antseed)
fig3 <- plot_grid(p_antEFN, p_antdom, p_elaiosome, labels="AUTO", ncol = 2, nrow = 2)
fig3
ggsave(fig3, device = "pdf", filename = "MEF_figure3.pdf")
fig3 <- plot_grid(p_antEFN, p_antdom, p_elaiosome, labels="AUTO", ncol = 2, nrow = 2)
fig3
save_plot("MEF_figure3.pdf", fig3, base_height=6)
pt_size <- 3
y_limits <- c(-100, 4.5e+6)
er_width <- 0.1
y_text <- -0.5
summary.ant.efn <- area %>% group_by(EFN) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Visit EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antEFN
summary.ant.dom <- area %>% group_by(Domatia) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antdom <- ggplot(data=summary.ant.dom, aes(x=Domatia, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Nests in domatia")+geom_text(aes(x=Domatia, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antdom
summary.ant.elaiosome <- area %>% group_by(Seed_Dispersal) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_elaiosome <- ggplot(data=summary.ant.elaiosome, aes(x=Seed_Dispersal, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Seed_Dispersal, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Disperses seeds")+geom_text(aes(x=Seed_Dispersal, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_elaiosome
fig3 <- plot_grid(p_antEFN, p_antdom, p_elaiosome, labels="AUTO", ncol = 2, nrow = 2)
fig3
save_plot("MEF_figure3.pdf", fig3, base_height=6)
pt_size <- 3
y_limits <- c(-1000, 4.5e+6)
er_width <- 0.1
y_text <- -0.5
summary.ant.efn <- area %>% group_by(EFN) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Visit EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antEFN
summary.ant.dom <- area %>% group_by(Domatia) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antdom <- ggplot(data=summary.ant.dom, aes(x=Domatia, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Nests in domatia")+geom_text(aes(x=Domatia, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antdom
summary.ant.elaiosome <- area %>% group_by(Seed_Dispersal) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_elaiosome <- ggplot(data=summary.ant.elaiosome, aes(x=Seed_Dispersal, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Seed_Dispersal, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range area (sq. km)")+xlab("Disperses seeds")+geom_text(aes(x=Seed_Dispersal, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_elaiosome
fig3 <- plot_grid(p_antEFN, p_antdom, p_elaiosome, labels="AUTO", ncol = 2, nrow = 2)
fig3
save_plot("MEF_figure3.pdf", fig3, base_height=6)
fig3 <- plot_grid(p_antEFN, p_antdom, p_elaiosome, labels="AUTO")
fig3
save_plot("MEF_figure3.pdf", fig3, base_height=6)
pt_size <- 3
y_limits <- c(-1000, 4.5e+6)
er_width <- 0.1
y_text <- -0.5
summary.ant.efn <- area %>% group_by(EFN) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range (sq. km)")+xlab("Visit EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antEFN
summary.ant.dom <- area %>% group_by(Domatia) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antdom <- ggplot(data=summary.ant.dom, aes(x=Domatia, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range (sq. km)")+xlab("Nests in domatia")+geom_text(aes(x=Domatia, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antdom
summary.ant.elaiosome <- area %>% group_by(Seed_Dispersal) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_elaiosome <- ggplot(data=summary.ant.elaiosome, aes(x=Seed_Dispersal, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Seed_Dispersal, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range (sq. km)")+xlab("Disperses seeds")+geom_text(aes(x=Seed_Dispersal, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_elaiosome
fig3 <- plot_grid(p_antEFN, p_antdom, p_elaiosome, labels="AUTO")
fig3
save_plot("MEF_figure3.pdf", fig3, base_height=6)
fig3 <- plot_grid(p_antEFN, p_antdom, p_elaiosome)
fig3
save_plot("MEF_figure3.pdf", fig3, base_height=6)
pt_size <- 3
y_limits <- c(-10000, 4.5e+6)
er_width <- 0.1
y_text <- -0.5
summary.ant.efn <- area %>% group_by(EFN) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range (sq. km)")+xlab("Visit EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antEFN
summary.ant.dom <- area %>% group_by(Domatia) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antdom <- ggplot(data=summary.ant.dom, aes(x=Domatia, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range (sq. km)")+xlab("Nests in domatia")+geom_text(aes(x=Domatia, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antdom
summary.ant.elaiosome <- area %>% group_by(Seed_Dispersal) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_elaiosome <- ggplot(data=summary.ant.elaiosome, aes(x=Seed_Dispersal, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Seed_Dispersal, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range (sq. km)")+xlab("Disperses seeds")+geom_text(aes(x=Seed_Dispersal, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_elaiosome
fig3 <- plot_grid(p_antEFN, p_antdom, p_elaiosome)
fig3
save_plot("MEF_figure3.pdf", fig3, base_height=6)
pt_size <- 3
y_limits <- c(-1, 10.5)
er_width <- 0.1
y_text <- -0.5
p_EFN <- ggplot(data=summary.efn, aes(x=EFN, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced ranges (no.)")+xlab("EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_EFN
p_dom <- ggplot(data=summary.dom, aes(x=Domatia, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+geom_line(aes(group=1), linetype="dashed")+theme_cowplot()+ylab("Introduced ranges (no.)")+xlab("Domatia")+geom_text(aes(x=Domatia, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_dom
p_fix <- ggplot(data=summary.fix, aes(x=fixer, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=fixer, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+geom_line(aes(group=1), linetype="dashed")+theme_cowplot()+ylab("Introduced ranges (no.)")+xlab("Nodules")+geom_text(aes(x=fixer, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_fix
p_myco_sup <- ggplot(data=subset(summary.myco, !is.na(Consensus.mycorrhizal.state)), aes(x=Consensus.mycorrhizal.state, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Consensus.mycorrhizal.state, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+theme_cowplot()+ylab("Introduced ranges (no.)")+xlab("Mycorrhizal state")+geom_text(aes(x=Consensus.mycorrhizal.state, y= 0.1, label=n))+scale_y_continuous(limits=c(0, 12.5))
p_myco_sup
p_myco <- ggplot(data=subset(summary.myco2, !is.na(myco)), aes(x=myco, y=mean_num_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=myco, ymin=mean_num_introduced-se_num_introduced, ymax=mean_num_introduced+se_num_introduced), width=er_width)+geom_line(aes(group=1), linetype="dashed")+theme_cowplot()+ylab("Introduced ranges (no.)")+xlab("Mycorrhizae")+geom_text(aes(x=myco, y= y_text, label=n))+scale_y_continuous(limits=y_limits)+scale_x_discrete(labels=c("No", "Yes"))
p_myco
fig1 <- plot_grid(p_EFN, p_dom, p_myco, p_fix)
fig1
save_plot("MEF_figure1.pdf", fig1, base_height=6)
View(area)
View(legume_range_df)
pt_size <- 3
y_limits <- c(-10000, 4.5e+6)
er_width <- 0.1
y_text <- -0.5
summary.ant.efn <- area %>% group_by(EFN) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antEFN <- ggplot(data=summary.ant.efn, aes(x=EFN, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=EFN, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range (sq. km)")+xlab("Visits EFNs")+geom_text(aes(x=EFN, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antEFN
summary.ant.dom <- area %>% group_by(Domatia) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_antdom <- ggplot(data=summary.ant.dom, aes(x=Domatia, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Domatia, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range (sq. km)")+xlab("Nests in domatia")+geom_text(aes(x=Domatia, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_antdom
summary.ant.elaiosome <- area %>% group_by(Seed_Dispersal) %>% summarize(n=n(), mean_introduced = mean(total.area.introduced, na.rm=TRUE), sd_introduced = sd(total.area.introduced, na.rm=TRUE), se_introduced = sd_introduced/sqrt(n))
p_elaiosome <- ggplot(data=summary.ant.elaiosome, aes(x=Seed_Dispersal, y=mean_introduced))+geom_point(size=pt_size)+geom_errorbar(aes(x=Seed_Dispersal, ymin=mean_introduced-se_introduced, ymax=mean_introduced+se_introduced), width=er_width)+ geom_line(aes(group=1),linetype="dashed")+theme_cowplot()+ylab("Introduced range (sq. km)")+xlab("Disperses seeds")+geom_text(aes(x=Seed_Dispersal, y= y_text, label=n))+scale_x_discrete(labels=c("No", "Yes"))+scale_y_continuous(limits=y_limits)
p_elaiosome
fig3 <- plot_grid(p_antEFN, p_antdom, p_elaiosome)
fig3
save_plot("MEF_figure3.pdf", fig3, base_height=6)
View(mycorrhizae)
View(mycorrhizae)
p3 <- glm(num_introduced ~ Domatia + EFN + fixer + total_area_native + abs_lat_native + annual + uses_num_uses, data=legume_range_df)
summary(p3)
p3 <- glm(num_introduced ~ Domatia + EFN + fixer + total_area_native + abs_lat_native + annual + uses_num_uses, data=legume_range_df, family="quasipoisson")
summary(p3)
plot(p3)
