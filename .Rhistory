legume_range_df$EM <- as.factor(legume_range_df$EM)
legume_range_df$annual <- as.numeric(legume_range_df$annual)
legume_range_df$woody <- as.numeric(legume_range_df$woody)
##Collapse all mycorrhizal fungi types into a single yes/no category
legume_range_df$myco <- ifelse(legume_range_df$AM == "Y" | legume_range_df$EM == "Y", 1, ifelse(legume_range_df$AM == "N" & legume_range_df$EM == "N", 0, NA))
legume_range_df$myco <- as.factor(legume_range_df$myco)
df <- legume_range_df
summary.efn <- ungroup(subset(df, !is.na(num_introduced)) %>% group_by(EFN) %>% dplyr::summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
kable(summary.efn)
summary.dom <- ungroup(subset(df, !is.na(num_introduced)) %>% group_by(Domatia) %>% dplyr::summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
summary.fix <- ungroup(subset(df, !is.na(num_introduced)) %>% group_by(fixer) %>% dplyr::summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
summary.myco <- ungroup(subset(df, !is.na(num_introduced) & !is.na(myco)) %>% group_by(myco) %>% dplyr::summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
summary.myco2 <- ungroup(subset(df, !is.na(num_introduced) & !is.na(myco)) %>% group_by(AM,EM) %>% dplyr::summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n), mean_area_introduced = mean(total_area_introduced, na.rm=TRUE), sd_area_introduced = sd(total_area_introduced, na.rm=TRUE), se_area_introduced = sd_area_introduced/sqrt(n)))
#EFN figure
summary.efn <- ungroup(subset(df, !is.na(num_introduced) & num_introduced > 0) %>% group_by(EFN) %>% dplyr::summarize(n=n(), mean_num_introduced = mean(num_introduced, na.rm=TRUE), sd_num_introduced = sd(num_introduced, na.rm=TRUE), se_num_introduced = sd_num_introduced/sqrt(n)))
#Native range size
lmer6 <- lmer(log(total_area_native/1e+6)~AM+EM+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(df, !is.na(myco)))
df$AM.num <- ifelse(df$AM == "Y", 1, ifelse(df$AM == "N", 0, NA))
df$EM.num <- ifelse(df$EM == "Y", 1, ifelse(df$EM == "N", 0, NA))
df$num_mutualisms <- as.numeric(as.character(df$fixer))+as.numeric(as.character(df$EFN))+as.numeric(as.character(df$AM.num))+as.numeric(as.character(df$Domatia))+as.numeric(as.character(df$EM.num))
summary.mnum2 <- ungroup(subset(df, !is.na(num_mutualisms)) %>% group_by(num_mutualisms, introducedY) %>% dplyr::summarize(n=n()))
df$introducedY <- ifelse(df$num_introduced > 0, 1, 0) #Create binary variable for whether or not legume is introduced
summary.mnum2 <- ungroup(subset(df, !is.na(num_mutualisms)) %>% group_by(num_mutualisms, introducedY) %>% dplyr::summarize(n=n()))
summary.mnum2.wide <- spread(summary.mnum2, key = introducedY, value=n)
lmer7 <-  lmer(log(num_introduced)~num_mutualisms+annual+scale(abs_lat_native)+uses_num_uses+scale(total_area_native)+(1|genus), data=subset(df, !is.na(num_mutualisms) & introducedY == 1))
summary(lmer7)
Anova(lmer7, type=3)
binomial4 <-  glmer(introducedY~num_mutualisms+annual+scale(abs_lat_native)+uses_num_uses+scale(total_area_native)+(1|genus), data=subset(df, !is.na(num_mutualisms)), family="binomial")
Anova(binomial4, type=3)
#Fit binomial model without random effect
binomial2 <- glm(introducedY~fixer*uses_num_uses+EFN+Domatia+fixer+scale(total_area_native)+woody+annual+scale(abs_lat_native)+uses_num_uses, data=df, family="binomial")
binomial1 <- glmer(introducedY~EFN+scale(total_area_native)+woody+annual+scale(abs_lat_native)+(1|tribe_ncbi), data=df, family="binomial",  control = glmerControl(tol = 1e-7))
binomial1 <- glmer(introducedY~fixer + Domatia + EFN+scale(total_area_native)+woody+annual+scale(abs_lat_native)+(1|tribe_ncbi), data=df, family="binomial",  control = glmerControl(tol = 1e-7))
binomial1 <- glmer(introducedY~fixer*uses_num_uses + Domatia + EFN+scale(total_area_native)+woody+annual+scale(abs_lat_native)+(1|tribe_ncbi), data=df, family="binomial",  control = glmerControl(tol = 1e-7))
binomial1 <- glmer(introducedY~fixer*uses_num_uses + Domatia + EFN+scale(total_area_native)+woody+annual+scale(abs_lat_native)+(1|tribe_ncbi), data=df, family="binomial",  control = glmerControl(tol = 1))
binomial1 <- glmer(introducedY~fixer*uses_num_uses + Domatia + EFN+scale(total_area_native)+woody+annual+scale(abs_lat_native)+(1|tribe_ncbi), data=df, family="binomial",glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=100000)))
summary(binomial1)
#Fit binomial model without random effect
binomial2 <- glm(introducedY~EFN*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(total_area_native)+woody+annual+scale(abs_lat_native)+uses_num_uses, data=df, family="binomial")
summary(binomial2)
#Fit binomial model without random effect
binomial2 <- glm(introducedY~Domatia*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(total_area_native)+woody+annual+scale(abs_lat_native)+uses_num_uses, data=df, family="binomial")
#Fit binomial model without random effect
binomial2 <- glm(introducedY~Domatia*uses_num_uses+fixer*uses_num_uses+EFN+scale(total_area_native)+woody+annual+scale(abs_lat_native), data=df, family="binomial")
summary(binomial2)
#Number of introduced ranges
lmer1 <- lmer(log(num_introduced)~fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
Anova(lmer1, type=3,)
#Number of introduced ranges without random effect of genus
lm2 <- lm(log(num_introduced)~fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses, data=legume_range_df_introducedY)
summary(lm2)
#Compare models
anova(lmer1, lm2) #Random effect improves model fit to data
#Introduced area (if introduced at all)
lmer2 <- lmer(log(total_area_introduced/1e+6)~fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
#Introduced area (if introduced at all)
lmer2 <- lmer(log(total_area_introduced/1e+6)~fixer*uses_num_uses+EFN*Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
summary(lmer2)
Anova(lmer2, type=3)
binomial1 <- glmer(introducedY~fixer*uses_num_uses + fixer  EFN*Domatia+scale(total_area_native)+woody+annual+scale(abs_lat_native)+(1|tribe_ncbi), data=df, family="binomial",glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=100000)))
binomial1 <- glmer(introducedY~fixer*uses_num_uses + fixer + EFN*Domatia+scale(total_area_native)+woody+annual+scale(abs_lat_native)+(1|tribe_ncbi), data=df, family="binomial",glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=100000)))
summary(binomial1)
#Fit binomial model without random effect
binomial2 <- glm(introducedY~fixer*uses_num_uses+EFN*Domatia+fixer+scale(total_area_native)+woody+annual+scale(abs_lat_native)+uses_num_uses, data=df, family="binomial")
#Compare models
anova(binomial1, binomial2) #Random effect improves model fit to data
#Fit a linear mixed model for how many new ranges an introduced legume has established in, and how much total area they cover
legume_range_df_introducedY <- subset(df, num_introduced >0) #Filter to species with 1+ introduced ranges
#Number of introduced ranges
lmer1 <- lmer(log(num_introduced)~fixer*uses_num_uses+EFN*Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
summary(lmer1)
Anova(lmer1, type=3,)
#Number of introduced ranges
lmer1 <- lmer(log(num_introduced)~fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
#Number of introduced ranges without random effect of genus
lm2 <- lm(log(num_introduced)~fixer*uses_num_uses+EFN*Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses, data=legume_range_df_introducedY)
Anova(lm2, type=3)
#Number of introduced ranges without random effect of genus
lm2 <- lm(log(num_introduced)~fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses, data=legume_range_df_introducedY)
#Number of introduced ranges without random effect of genus
lm2 <- lm(log(num_introduced)~Domatia*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses, data=legume_range_df_introducedY)
summary(lm2)
#Number of introduced ranges without random effect of genus
lm2 <- lm(log(num_introduced)~EFN*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses, data=legume_range_df_introducedY)
summary(lm2)
#Number of introduced ranges without random effect of genus
lm2 <- lm(log(num_introduced)~Domatia*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses, data=legume_range_df_introducedY)
summary(lm2)
#Number of introduced ranges
lmer1 <- lmer(log(num_introduced)~EFN*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
#Number of introduced ranges
lmer1 <- lmer(log(num_introduced)~EFN*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
summary(lmer1)
Anova(lmer1, type=3,)
#Number of introduced ranges
lmer1 <- lmer(log(num_introduced)~Domatia*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
summary(lmer1)
Anova(lmer1, type=3,)
#Number of introduced ranges without random effect of genus
lm2 <- lm(log(num_introduced)~Domatia*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses, data=legume_range_df_introducedY)
summary(lm2)
#Compare models
anova(lmer1, lm2) #Random effect improves model fit to data
#Introduced area (if introduced at all)
lmer2 <- lmer(log(total_area_introduced/1e+6)~EFN*uses_num_uses+fixer*uses_num_uses+EFN*Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
summary(lmer2)
Anova(lmer2, type=3)
#Introduced area (if introduced at all)
lmer2 <- lmer(log(total_area_introduced/1e+6)~Domatia*uses_num_uses+fixer*uses_num_uses+EFN*Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
Anova(lmer2, type=3)
summary(lmer2)
#Native range size
lmer3 <- lmer(log(total_area_native/1e+6)~EFN*Domatia+fixer+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=df)
summary(lmer3)
Anova(lmer3, type=3)
Anova(lmer2, type=3)
#Introduced area (if introduced at all)
lmer2 <- lmer(log(total_area_introduced/1e+6)~Domatia*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
Anova(lmer2, type=3)
#Native range size
lmer3 <- lmer(log(total_area_native/1e+6)~fixer*uses_human_uses+EFN*Domatia+fixer+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=df)
#Native range size
lmer3 <- lmer(log(total_area_native/1e+6)~fixer*uses_num_uses+EFN*Domatia+fixer+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=df)
summary(lmer3)
Anova(lmer3, type=3)
#Native range size
lmer3 <- lmer(log(total_area_native/1e+6)~EFN*uses_num_uses+fixer*uses_num_uses+EFN*Domatia+fixer+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=df)
summary(lmer3)
Anova(lmer3, type=3)
#Native range size
lmer3 <- lmer(log(total_area_native/1e+6)~Domatia*uses_num_uses+EFN*uses_num_uses+fixer*uses_num_uses+EFN*Domatia+fixer+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=df)
summary(lmer3)
Anova(lmer3, type=3)
#Mycorrhizae
#Successful introduction?
binomial3 <- glmer(introducedY~AM*uses_num_uses+AM*EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(df, !is.na(myco)), family="binomial", control=glmerControl(optimizer="nloptwrap", optCtrl=list(maxfun=2e6)))
#Mycorrhizae
#Successful introduction?
binomial3 <- glmer(introducedY~AM*uses_num_uses+AM*EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(df, !is.na(myco)), family="binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=100000)))
summary(binomial3)
#Mycorrhizae
#Successful introduction?
binomial3 <- glmer(introducedY~EM*uses_num_uses+AM*EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(df, !is.na(myco)), family="binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=100000)))
summary(binomial3)
#Number of introduced ranges
lmer4 <- lmer(log(num_introduced)~AM*uses_num_uses, AM+EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(legume_range_df_introducedY, !is.na(myco)))
#Number of introduced ranges
lmer4 <- lmer(log(num_introduced)~AM*uses_num_uses, AM+EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(legume_range_df_introducedY, !is.na(myco)))
#Number of introduced ranges
lmer4 <- lmer(log(num_introduced)~AM*uses_num_uses+AM+EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(legume_range_df_introducedY, !is.na(myco)))
summary(lmer4)
Anova(lmer4, type=3)
#Number of introduced ranges
lmer4 <- lmer(log(num_introduced)~EM*uses_num_uses+AM+EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(legume_range_df_introducedY, !is.na(myco)))
summary(lmer4)
Anova(lmer4, type=3)
#Introduced area (if introduced at all)
lmer5 <- lmer(log(total_area_introduced/1e+6)~EM*uses_num_uses+AM+EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(legume_range_df_introducedY, !is.na(myco)))
summary(lmer5)
Anova(lmer5, type=3, test="F")
#Introduced area (if introduced at all)
lmer5 <- lmer(log(total_area_introduced/1e+6)~AM*uses_num_uses+AM+EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(legume_range_df_introducedY, !is.na(myco)))
Anova(lmer5, type=3, test="F")
#Native range size
lmer6 <- lmer(log(total_area_native/1e+6)~EM*uses_num_uses+AM+EM+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(df, !is.na(myco)))
summary(lmer6)
Anova(lmer6, type=3, test="F")
#Native range size
lmer6 <- lmer(log(total_area_native/1e+6)~AM*uses_num_uses+AM+EM+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(df, !is.na(myco)))
summary(lmer6)
Anova(lmer6, type=3, test="F")
#Native range size
lmer6 <- lmer(log(total_area_native/1e+6)~AM+EM+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(df, !is.na(myco)))
binomial4 <-  glmer(introducedY~num_mutualisms+annual+scale(abs_lat_native)+uses_num_uses+scale(total_area_native)+(1|genus), data=subset(df, !is.na(num_mutualisms)), family="binomial")
Anova(binomial4, type=3)
setwd("D:/PoojaCN/University of Toronto/Academics/Chapter 1 - Multiple mutualisms and diversification/Multiple mutualist data/ant-legume-range")
legume_range_df$EFN <- as.factor(legume_range_df$EFN)
legume_range_df$Domatia <- as.factor(legume_range_df$Domatia)
legume_range_df$fixer <- as.factor(legume_range_df$fixer)
legume_range_df$AM <- as.factor(legume_range_df$AM)
legume_range_df$EM <- as.factor(legume_range_df$EM)
legume_range_df$annual <- as.numeric(legume_range_df$annual)
legume_range_df$woody <- as.numeric(legume_range_df$woody)
df$Phy2 <- paste0(as.character(word(legume_range_df$Phy, 1, 1)), "_", as.character(word(legume_range_df$Phy, 2, 2)))
library(car)
library(ape)
library(geiger)
library(lme4)
library(nlme)
library(lmtest)
library(phytools)
library(caper)
library(tidyverse)
library(cowplot)
library(knitr)
library(taxize)
library(corrplot)
library(Hmisc)
legume_range_df$EFN <- as.factor(legume_range_df$EFN)
legume_range_df$Domatia <- as.factor(legume_range_df$Domatia)
legume_range_df$fixer <- as.factor(legume_range_df$fixer)
legume_range_df$AM <- as.factor(legume_range_df$AM)
legume_range_df$EM <- as.factor(legume_range_df$EM)
legume_range_df$annual <- as.numeric(legume_range_df$annual)
legume_range_df$woody <- as.numeric(legume_range_df$woody)
df$Phy2 <- paste0(as.character(word(legume_range_df$Phy, 1, 1)), "_", as.character(word(legume_range_df$Phy, 2, 2)))
zanne <- read.tree("Vascular_Plants_rooted.dated.tre") #reading in Zanne et al. 2014 plant phylogeny
phyint <- intersect(zanne$tip.label, df$Phy2)
phydiff <- setdiff(zanne$tip.label, df$Phy2)
pruned.tree.pgls <- drop.tip(zanne, phydiff) #dropping tips not in the dataset
range_pgls <- df[df$Phy2 %in% phyint, ]
head(range_pgls)
#colnames(range_pgls)
#which(colSums(is.na(range_pgls))>0) #Check which columns have NAs
#range_pgls <-range_pgls[,-c(8:11, 17:24, 26, 28)] #Remove some unneeded columns
range_pgls <- range_pgls[complete.cases(range_pgls), ] #removing NA elements
head(range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~  EFN+fixer+Domatia+total_area_native + abs_lat_native + uses_num_uses + woody + annual, correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2), method = "ML", data = range_pgls)
levels(range_pgls$fixer)
levels(range_pgls$AM)
levels(range_pgls$EM)
levels(range_pgls$EFN
levels(range_pgls$EFN)
levels(range_pgls$Domatia
levels(range_pgls$Domatia)
pgls1 <- gls(log(num_introduced + 1) ~  EFN+fixer+Domatia+total_area_native + abs_lat_native + uses_num_uses + woody + annual, correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2), method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~  factor(EFN, contrasts = list(EFN = contr.treatment))+
factor(fixer, contrasts = list(fixer = contr.treatment))+
factor(Domatia, contrasts = list(Domatia = contr.treatment))
+total_area_native + abs_lat_native + uses_num_uses + woody + annual, correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2), method = "ML", data = range_pgls)
sum(is.na(range_pgls))
str(range_pgls$num_introduced)
str(range_pgls$total_area_introduced
pgls1 <- gls(log(num_introduced + 1) ~  factor(EFN, contrasts = list(EFN = contr.treatment))+
factor(fixer, contrasts = list(fixer = contr.treatment))+
factor(Domatia, contrasts = list(Domatia = contr.treatment))
+total_area_native + abs_lat_native + uses_num_uses + annual, correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2), method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~  factor(EFN, contrasts = list(EFN = contr.treatment))+
factor(fixer, contrasts = list(fixer = contr.treatment))+
factor(Domatia, contrasts = list(Domatia = contr.treatment))
+total_area_native + abs_lat_native + uses_num_uses + woody + annual, correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ as.character(Phy2)), method = "ML", data = range_pgls)
#PGLS of total introduced area
pgls2 <- gls(log(total_area_introduced/1e+6 + 1) ~  EFN+Domatia+fixer+
total_area_native + abs_lat_native + uses_num_uses+ annual + woody,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
library(caper)
pgls1 <- gls(log(num_introduced + 1) ~ factor(EFN, contrasts = list(EFN = contr.treatment))+
factor(fixer, contrasts = list(fixer = contr.treatment))+
factor(Domatia, contrasts = list(Domatia = contr.treatment))
+total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPhylog(tree = pruned.tree.pgls), method = "ML", data = range_pgls)
istall.packages("caper")
install.packages("caper")
install.packages("caper")
library(caper)
pgls1 <- gls(log(num_introduced + 1) ~ factor(EFN, contrasts = list(EFN = contr.treatment))+
factor(fixer, contrasts = list(fixer = contr.treatment))+
factor(Domatia, contrasts = list(Domatia = contr.treatment))
+total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPhylog(tree = pruned.tree.pgls), method = "ML", data = range_pgls)
install.packages("nlme")
install.packages("nlme")
install.packages("nlme")
install.packages("nlme")
install.packages("nlme")
install.packages("nlme")
library(nlme)
pgls1 <- nlme::gls(log(num_introduced + 1) ~ factor(EFN, contrasts = list(EFN = contr.treatment))+
factor(fixer, contrasts = list(fixer = contr.treatment))+
factor(Domatia, contrasts = list(Domatia = contr.treatment))
+total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPhylog(tree = pruned.tree.pgls), method = "ML", data = range_pgls)
search(corPhylog)
search()
pgls1 <- gls(log(num_introduced + 1) ~ factor(EFN, contrasts = list(EFN = contr.treatment)) +
factor(fixer, contrasts = list(fixer = contr.treatment)) +
factor(Domatia, contrasts = list(Domatia = contr.treatment)) +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- nlme::gls(log(num_introduced + 1) ~ factor(EFN, contrasts = list(EFN = contr.treatment)) +
factor(fixer, contrasts = list(fixer = contr.treatment)) +
factor(Domatia, contrasts = list(Domatia = contr.treatment)) +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ EFN + fixer + Domatia +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
library(car)
library(ape)
library(geiger)
library(lme4)
library(nlme)
library(car)
library(ape)
library(geiger)
library(lme4)
library(nlme)
library(lmtest)
library(phytools)
library(caper)
library(tidyverse)
library(cowplot)
library(knitr)
library(taxize)
library(corrplot)
library(Hmisc)
setwd("D:/PoojaCN/University of Toronto/Academics/Chapter 1 - Multiple mutualisms and diversification/Multiple mutualist data/ant-legume-range")
legume_range_df$EFN <- as.factor(legume_range_df$EFN)
legume_range_df$Domatia <- as.factor(legume_range_df$Domatia)
legume_range_df$fixer <- as.factor(legume_range_df$fixer)
legume_range_df$AM <- as.factor(legume_range_df$AM)
legume_range_df$EM <- as.factor(legume_range_df$EM)
legume_range_df$annual <- as.numeric(legume_range_df$annual)
legume_range_df$woody <- as.numeric(legume_range_df$woody)
df$Phy2 <- paste0(as.character(word(legume_range_df$Phy, 1, 1)), "_", as.character(word(legume_range_df$Phy, 2, 2)))
zanne <- read.tree("Vascular_Plants_rooted.dated.tre") #reading in Zanne et al. 2014 plant phylogeny
phyint <- intersect(zanne$tip.label, df$Phy2)
phydiff <- setdiff(zanne$tip.label, df$Phy2)
pruned.tree.pgls <- drop.tip(zanne, phydiff)
range_pgls <- df[df$Phy2 %in% phyint, ]
#colnames(range_pgls)
#which(colSums(is.na(range_pgls))>0) #Check which columns have NAs
#range_pgls <-range_pgls[,-c(8:11, 17:24, 26, 28)] #Remove some unneeded columns
range_pgls <- range_pgls[complete.cases(range_pgls), ] #removing NA elements
pgls1 <- gls(log(num_introduced + 1) ~ EFN + fixer + Domatia +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ EFN +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ fixer + Domatia +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ EFN + fixer +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
#PGLS of total introduced area
pgls2 <- gls(log(total_area_introduced/1e+6 + 1) ~
total_area_native + abs_lat_native + uses_num_uses+ annual + woody,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls((num_introduced) ~ EFN + fixer + Domatia +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
#PGLS of total introduced area
pgls2 <- gls((total_area_introduced/1e+6 + 1) ~  EFN+Domatia+fixer+
total_area_native + abs_lat_native + uses_num_uses+ annual + woody,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
#PGLS of total introduced area
pgls2 <- gls((total_area_introduced/1e+6 + 1) ~
total_area_native + abs_lat_native + uses_num_uses+ annual + woody,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ EFN +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ as.numeric(EFN) + fixer + Domatia +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ as.numeric(EFN) + as.numeric(fixer) + as.numeric(Domatia) +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ EFN + fixer + Domatia ,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ as.numeric(EFN) + as.numeric(fixer) + as.numeric(Domatia) +
,
pgls1 <- gls(log(num_introduced + 1) ~ as.numeric(EFN) + as.numeric(fixer) + as.numeric(Domatia),
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ EFN +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ as.numeric(EFN) +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ as.numeric(EFN) +
total_area_native + abs_lat_native + uses_num_uses ,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ as.numeric(EFN) +
total_area_native  ,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ as.numeric(EFN) ,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ Domatia +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ as.numeric(Domatia) +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ as.numeric(fixer) +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
pgls1 <- gls(log(num_introduced + 1) ~ as.numeric(EFN) +
total_area_native + abs_lat_native + uses_num_uses + woody + annual,
correlation = corPagel(1, phy = pruned.tree.pgls, form = ~ Phy2),
method = "ML", data = range_pgls)
binomial1 <- glmer(introducedY~fixer*uses_num_uses + fixer + EFN*Domatia+scale(total_area_native)+woody+annual+scale(abs_lat_native)+(1|tribe_ncbi), data=df, family="binomial",glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=100000)))
Anova(binomial1, type=3)
summary(binomial1)
#Fit a linear mixed model for how many new ranges an introduced legume has established in, and how much total area they cover
legume_range_df_introducedY <- subset(df, num_introduced >0) #Filter to species with 1+ introduced ranges
#Number of introduced ranges
lmer1 <- lmer(log(num_introduced)~Domatia*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
summary(lmer1)
Anova(lmer1, type=3,)
head(legume_range_df_introducedY)
temp <- legume_range_df_introducedY[Domatia == 1]
temp <- legume_range_df_introducedY[legume_range_df_introducedY$Domatia == 1,]
hist(temp$uses_num_uses)
#Number of introduced ranges
lmer1 <- lmer(log(num_introduced)~fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
summary(lmer1)
Anova(lmer1, type=3,)
#Number of introduced ranges
lmer1 <- lmer(log(num_introduced)~EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
Anova(lmer1, type=3,)
#Introduced area (if introduced at all)
lmer2 <- lmer(log(total_area_introduced/1e+6)~Domatia*uses_num_uses+fixer*uses_num_uses+EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
summary(lmer2)
Anova(lmer2, type=3)
#Introduced area (if introduced at all)
lmer2 <- lmer(log(total_area_introduced/1e+6)~EFN+Domatia+fixer+scale(abs_lat_native)+scale(total_area_native)+annual+woody+uses_num_uses+(1|tribe_ncbi), data=legume_range_df_introducedY)
summary(lmer2)
Anova(lmer2, type=3)
#Native range size
lmer3 <- lmer(log(total_area_native/1e+6)~EFN*uses_num_uses+fixer*uses_num_uses+EFN*Domatia+fixer+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=df)
summary(lmer3)
Anova(lmer3, type=3)
#Mycorrhizae
#Successful introduction?
binomial3 <- glmer(introducedY~AM*EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(df, !is.na(myco)), family="binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=100000)))
summary(binomial3)
#Number of introduced ranges
lmer4 <- lmer(log(num_introduced)~EM*uses_num_uses+AM+EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(legume_range_df_introducedY, !is.na(myco)))
summary(lmer4)
Anova(lmer4, type=3)
#Introduced area (if introduced at all)
lmer5 <- lmer(log(total_area_introduced/1e+6)~AM+EM+scale(total_area_native)+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(legume_range_df_introducedY, !is.na(myco)))
summary(lmer5)
Anova(lmer5, type=3, test="F")
#Native range size
lmer6 <- lmer(log(total_area_native/1e+6)~AM+EM+annual+woody+scale(abs_lat_native)+uses_num_uses+(1|tribe_ncbi), data=subset(df, !is.na(myco)))
summary(lmer6)
Anova(lmer6, type=3, test="F")
lmer7 <-  lmer(log(num_introduced)~num_mutualisms+annual+scale(abs_lat_native)+uses_num_uses+scale(total_area_native)+(1|genus), data=subset(df, !is.na(num_mutualisms) & introducedY == 1))
summary(lmer7)
Anova(lmer7, type=3)
lmer7 <-  lmer(log(num_introduced)~num_mutualisms+annual+scale(abs_lat_native)+woody+uses_num_uses+scale(total_area_native)+(1|genus), data=subset(df, !is.na(num_mutualisms) & introducedY == 1))
summary(lmer7)
Anova(lmer7, type=3)
binomial4 <-  glmer(introducedY~num_mutualisms+annual+woody+scale(abs_lat_native)+uses_num_uses+scale(total_area_native)+(1|genus), data=subset(df, !is.na(num_mutualisms)), family="binomial")
summary(binomial4)
#Introduction success
binomial6 <- glmer(introducedY~EFN+Domatia+Seed_Dispersal+scale(abs_lat_native)+scale(total.area.native)+(1|Tribe), data=area, family="binomial")
str(area$Tribe)
#Introduction success
binomial6 <- glmer(introducedY~EFN+Domatia+Seed_Dispersal+scale(abs_lat_native)+scale(total.area.native)+(1|as.factor(Tribe)), data=area, family="binomial")
area$Tribe <- as.factor(area$Tribe)
#Introduction success
binomial6 <- glmer(introducedY~EFN+Domatia+Seed_Dispersal+scale(abs_lat_native)+scale(total.area.native)+(1|Tribe), data=area, family="binomial")
summary(binomial6)
View(area)
area$genus <- splitstr(area$Phy, "_")
install.packages("stringr")
install.packages("stringr")
area$genus <- stringr::splitstr(area$Phy, "_")
library(stringr)
area$genus <- word(area$Phy, start=1L, sep="_")
View(area)
#Introduction success
binomial6 <- glmer(introducedY~EFN+Domatia+Seed_Dispersal+scale(abs_lat_native)+scale(total.area.native)+(1|genus), data=area, family="binomial")
#Introduction success
binomial6 <- nlme::glmer(introducedY~EFN+Domatia+Seed_Dispersal+scale(abs_lat_native)+scale(total.area.native)+(1|genus), data=area, family="binomial")
#Introduction success
binomial6 <- lme4::glmer(introducedY~EFN+Domatia+Seed_Dispersal+scale(abs_lat_native)+scale(total.area.native)+(1|genus), data=area, family="binomial")
summary(binomial6)
Anova(binomial6, type=3)
car::Anova(binomial6, type=3)
